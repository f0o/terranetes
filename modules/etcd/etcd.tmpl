apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
  labels:
    app: etcd
    heritage: terranetes
  name: etcd-$${HOSTNAME}
  namespace: kube-system
spec:
  containers:
  - command:
    - etcd
    - --name=etcd-$${HOSTNAME}
    - --data-dir=/var/lib/etcd
    - --listen-peer-urls=https://0.0.0.0:2380
    - --listen-client-urls=https://0.0.0.0:2379
    - --initial-advertise-peer-urls=https://$${HOST_IP}:2380
    - --advertise-client-urls=https://$${HOST_IP}:2379
    - --cert-file=/etc/etcd/etcd.crt
    - --key-file=/etc/etcd/etcd.key
    - --trusted-ca-file=/etc/etcd/ca.crt
    - --peer-cert-file=/etc/etcd/etcd.crt
    - --peer-key-file=/etc/etcd/etcd.key
    - --peer-trusted-ca-file=/etc/etcd/ca.crt
    - --client-cert-auth=true
    - --peer-client-cert-auth=true
    - ${discovery == "static" ? "--initial-cluster=${join(",",[for k,v in masters : "etcd-k8s-${k}=https://${v.ip}:2380"])}" : "--discovery=${discovery}"}
    image: ${image}
    livenessProbe:
      exec:
        command:
        - etcdctl
        - --cert-file
        - /etc/etcd/etcd.crt
        - --key-file
        - /etc/etcd/etcd.key
        - --ca-file
        - /etc/etcd/ca.crt
        - --endpoints
        - https://$${HOST_IP}:2379
        - cluster-health
      initialDelaySeconds: 45
    name: etcd
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /etc/etcd/
      name: config
      readOnly: true
    - mountPath: /etc/ssl/
      name: ssl
      readOnly: true
    - mountPath: /usr/share/ca-certificates/
      name: usr-ssl
      readOnly: true
    - mountPath: /var/lib/etcd/
      name: data
    workingDir: /var/lib/etcd
  hostNetwork: true
  priorityClassName: system-node-critical
  restartPolicy: Always
  volumes:
  - hostPath:
      path: /etc/etcd/
    name: config
  - hostPath:
      path: /etc/ssl/
    name: ssl
  - hostPath:
      path: /usr/share/ca-certificates/
    name: usr-ssl
  - hostPath:
      path: /var/lib/etcd
    name: data